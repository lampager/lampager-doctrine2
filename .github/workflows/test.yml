name: Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        lib:
          - { php: 5.6, orm: ^2.4.5, cache: '' }
          - { php: '7.0', orm: ^2.4.5, cache: '' }
          - { php: 7.1, orm: ^2.4.5, cache: ^1.11 }
          - { php: 7.2, orm: ^2.4.5, cache: ^1.11 }
          - { php: 7.3, orm: ^2.6.3, cache: ^1.11 }
          - { php: 7.4, orm: ^2.6.4, cache: ^1.11 }
          - { php: '8.0', orm: ^2.6.4, cache: ^1.11 }
          # - { php: 8.1, orm: ^2.6.4, cache: ^1.11 }
        flags: [--prefer-lowest, '']

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.lib.php }}
          coverage: xdebug

      - name: Adjust package versions
        run: |
          composer require phpunit/phpunit --dev --no-update
          composer require doctrine/orm:$ORM_VERSION --no-update $FLAGS
          composer remove doctrine/cache --dev --no-update
          if [ ! -z $CACHE_VERSION ]; then
            composer require doctrine/cache:$CACHE_VERSION --dev --no-update $FLAGS
          fi
          composer update $FLAGS
        env:
          ORM_VERSION: ${{ matrix.lib.orm }}
          CACHE_VERSION: ${{ matrix.lib.cache }}
          FLAGS: ${{ matrix.flags }}

      - name: Display package versions
        id: package-versions
        run: |
          composer show | grep -E '^(doctrine/|lampager/)'
          echo '::set-output name=doctrine::'$(composer show | grep -E '^(doctrine/orm)' | awk '{print $2}')

      - run: mkdir -p build/logs
      - run: vendor/bin/phpunit --coverage-clover build/logs/clover.xml

      - name: Upload Coverage
        uses: nick-invision/retry@v2
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: 'true'
          COVERALLS_FLAG_NAME: 'php:${{ matrix.lib.php }} doctrine:${{ steps.package-versions.outputs.doctrine }}'
        with:
          timeout_minutes: 1
          max_attempts: 3
          command: |
            composer global require php-coveralls/php-coveralls
            php-coveralls --coverage_clover=build/logs/clover.xml -v

  coverage-aggregation:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Aggregate Coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
